active items:
convert panics into errors, even in main func (it manually sets a nonzero status code instead)
make let followed match statements use return value from match
add state export functions to rngengine trait
accept integer for seed if it doesn't require a bigint
add cgcsprng2, well512a and 3 others (using reference implementation and thus requiring adding of a legal section to this program), xorshift128+, xoroshiro256++
add null cache, byte cache, bit cache
add assembly trng rdrand rdseed (https://www.intel.com/content/www/us/en/developer/articles/guide/intel-digital-random-number-generator-drng-software-implementation-guide.html, https://doc.rust-lang.org/reference/inline-assembly.html)
split main code into parser that produces an enum and runner that takes in the enum; parser code can then be tested (in a seperate subfolder in test); potentially can also test actual output of command by making output a string and then checking for equality

low priority:
reconcile the 2 inexplicably different types in the current_time subcommand
improve argument handling of main.rs as seed isnt needed sometimes (make seed be nullable value and check for its existence when necessary)
make sleep function call Sleep(INFINITE) function on windows (https://github.com/microsoft/windows-rs)
figure out how to move cgrandom into a library crate
if current_time command errors getting the timezone, just don't show timezone data (so properly handling errors)
error on extra arguments always
add extern crate lines to modules
add linting for required int type hints, required extern crates
add output format option for hex output rngs to show as comma seperated u8 array instead

long term items:
subcommands:
  resource allocate
  fs operations
  language parser / calculator using bigints and any other type
  null command
  command to error with a given error code
  cat command, but also accepting base64 input argument in addition to regular
  simple web server that is http and just returns a 200 text/plain; charset=utf-8 with contents 'Simple Test Server\nCurrent Date is <ISO Date Format>'
debug subcommands:
  delayed print (prints 1 thru 10 with a 1 second delay between each)

keep in mind:
if other tests for cgrandom are added other than the generators, then move current cgrandom tests into generators subfolder
